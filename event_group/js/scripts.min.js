$(document).ready(function () {
  let tl = gsap.timeline();
  let textTransition = $('.transition-text li');
  let pText = $('[data-content = pText]');
  let iconsFooter = $('.group-items__footer');
  $('.gruop__tab').eq(0).addClass('active');

  function toggleDropdown(clickElement, parentClassName, selfClassName, classToggle) {
    $(clickElement).click(function () {
      if ($(parentClassName).hasClass('active')) {
        $(parentClassName).removeClass('active');
        $(selfClassName).removeClass('active');
      }

      $(this).toggleClass('active');
      $(classToggle).toggleClass('active');
    });
  }

  $('.drop-down__link').click(function () {
    $(this).hasClass('active') ? $(this).removeClass('active') : ($('.drop-down__link').removeClass('active'), $(this).addClass('active'));
  });

  function hParse() {
    let str = $('[data-parse=h2]').html().split(' ');
    $('[data-parse=h2]').html('');

    for (let i = 0; i < str.length; i++) {
      $('[data-parse=h2]').append(`<span>${str[i]}</span> `);
    }

    setTimeout(function () {
      $('[data-parse=h2]').addClass('active');
    }, 2000);
  }

  $('.gruop__tab').click(function () {
    let target = $(this).data('click');

    switch (target) {
      case 'yourEvents':
        $('.events-gruop__item').fadeOut();
        $('[data-event=your]').fadeIn();
        $('.gruop__tab').removeClass('active');
        $('[data-click=' + target + ']').addClass('active');
        break;

      case 'bookedEvents':
        $('.events-gruop__item').fadeOut();
        $('[data-event=bookedEvents]').fadeIn();
        $('.gruop__tab').removeClass('active');
        $('[data-click=' + target + ']').addClass('active');
        break;

      default:
        $('.events-gruop__item').fadeIn();
        $('.gruop__tab').removeClass('active');
        $('[data-click=all]').addClass('active');
    }
  });
  hParse();
  toggleDropdown('.arrow-down div', '.notify', '.bell .icon', '.drop-down');
  toggleDropdown('.bell .icon', '.drop-down', '.arrow-down div', '.notify');
  tl.staggerTo(textTransition, 1, {
    y: '-100%',
    stagger: 0.1
  }, ">").fromTo(pText, 1, {
    y: '100%',
    opacity: 0
  }, {
    y: '0%',
    opacity: 1
  }, '-=0.5').fromTo(iconsFooter, 1, {
    y: '100%',
    opacity: 0
  }, {
    y: '0%',
    opacity: 1
  }, '-=0.5');
});